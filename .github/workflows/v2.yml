name: V2

on:
  release:
    types: [published]
  push:
    tags:
    - 'v*'
  #  branches: 
  #    - master
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: [started]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.15
      id: go

    - name: Debug
      run: |
        pwd
        echo $(go env GOPATH)
        echo ${GOROOT}
        echo ${HOME}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      
    - id: mos
      name: Get Mos-chinadns Latest Releas
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        owner: IrineSistiana
        repo: mos-chinadns
      
    - name: Update mos-chinadns
      run: |
        mkdir -p /opt/v2
        wget -c "https://github.com/IrineSistiana/mos-chinadns/releases/download/${{ steps.mos.outputs.release }}/mos-chinadns-linux-mipsle-softfloat.zip"
        unzip -fo mos-chinadns-linux-mipsle-softfloat.zip mos-chinadns 
        chmod +x mos-chinadns
        upx -9 mos-chinadns
        cp -f mos-chinadns ./v2/
        
    - name: Build source
      run: |
        export GOPATH=$(go env GOPATH) 
        go get -insecure -u v2ray.com/core/...
        cd ${GOPATH}/src/v2ray.com/core/
        sed -i 's/_ "v2ray.com\/core\/main\/json"/\/\/ &/g; s/\/\/ _ "v2ray.com\/core\/main\/jsonem"/_ "v2ray.com\/core\/main\/jsonem"/g' main/distro/all/all.go
        bazel clean
        bazel build --action_env=PATH=$PATH --action_env=SPWD=$PWD --action_env=GOPATH=$(go env GOPATH) --action_env=GOCACHE=$(go env GOCACHE) --spawn_strategy local //release:v2ray_linux_mips32le_package
    
    - name: Compress binary
      run: |
        find $HOME -name "v2ray*zip" -exec mv -t . {} +
        unzip v2ray-linux-mips32le.zip
        upx -k --best --lzma -o /opt/v2/v2ray v2ray_softfloat
        cp -f /opt/v2/v2ray ./v2/ 

    - name: Zip Release
      uses: TheDoctor0/zip-release@0.4.1
      with:
        filename: v2.zip
        path: ./v2/
  
    - name : Upload packages
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: V2-package
        path: ./v2.zip

    - name: Deploy file to server
      uses: wlixcc/SFTP-Deploy-Action@v1.0
      with:
          username: 'ubuntu'
          server: '${{ secrets.FILE_SERVER_IP }}' #测试服务器地址
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          local_path: './v2.zip'
          remote_path: '/var/www/'
